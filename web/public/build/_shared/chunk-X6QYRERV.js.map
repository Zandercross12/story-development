{
  "version": 3,
  "sources": ["../../../node_modules/groq/lib/groq.js", "../../../app/routes/home/index.jsx", "../../../app/lib/sanity/client.js"],
  "sourcesContent": ["\"use strict\";\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nmodule.exports = function groq(strings) {\n  for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  var lastIndex = strings.length - 1;\n  return strings.slice(0, lastIndex).reduce(function (acc, str, i) {\n    return acc + str + keys[i];\n  }, '') + strings[lastIndex];\n};", "import { client } from \"~/lib/sanity/client\";\r\nimport groq from \"groq\";\r\nimport { json, useLoaderData } from \"remix\";\r\n\r\nexport const loader = async () => {\r\n  const page = await client.fetch(groq`*[_type == \"pages\" && name == \"Home\"]`);\r\n\r\n  return page;\r\n};\r\n\r\nexport const Home = () => {\r\n  const data = useLoaderData();\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <section id=\"home\">\r\n      <div className=\"container\">\r\n        <h1></h1>\r\n        <p></p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n", "export const client = {\r\n    projectId: \"ufdizlou\",\r\n    dataset: \"production\",\r\n    useCdn: \"true\",\r\n    apiVersion: \"2022-03-7\",\r\n};"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAGA,WAAO,UAAU,eAAc,SAAS;AACtC,eAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,OAAO,IAAI,OAAO,IAAI,IAAI,OAAO,GAAG,OAAO,MAAM,QAAQ;AAC1G,aAAK,OAAO,KAAK,UAAU;AAAA;AAG7B,UAAI,YAAY,QAAQ,SAAS;AACjC,aAAO,QAAQ,MAAM,GAAG,WAAW,OAAO,SAAU,KAAK,KAAK,GAAG;AAC/D,eAAO,MAAM,MAAM,KAAK;AAAA,SACvB,MAAM,QAAQ;AAAA;AAAA;AAAA;;;ACXnB;;;ACAA;AAAO,IAAM,SAAS;AAAA,EAClB,WAAW;AAAA,EACX,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,YAAY;AAAA;;;ADHhB,kBAAiB;AAGV,IAAM,SAAS,YAAY;AAChC,QAAM,OAAO,MAAM,OAAO,MAAM;AAEhC,SAAO;AAAA;AAGF,IAAM,OAAO,MAAM;AACxB,QAAM,OAAO;AAEb,UAAQ,IAAI;AAEZ,SACE,oCAAC,WAAD;AAAA,IAAS,IAAG;AAAA,KACV,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,OACA,oCAAC,KAAD;AAAA;",
  "names": []
}
